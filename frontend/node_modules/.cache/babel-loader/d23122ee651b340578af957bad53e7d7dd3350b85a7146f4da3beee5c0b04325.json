{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\simple-mern-project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // const fetchProducts = async () => {\n    //   setIsLoading(true);\n    //   const response = await fetch('http://localhost:5000/products');\n\n    //   const responseData = await response.json();\n\n    //   setLoadedProducts(responseData.products);\n    //   setIsLoading(false);\n    // };\n\n    // fetchProducts();\n  }, []);\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        // title: productName,\n        // price: +productPrice // \"+\" to convert string to number\n        title: 'title',\n        price: `${1.0}` // \"+\" to convert string to number\n      };\n\n      let hasError = false;\n      // const response = await fetch('http://localhost:5000/product', {\n      //   method: 'POST',\n      //   body: JSON.stringify(newProduct),\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //   }\n      // });\n\n      // if (!response.ok) {\n      //   hasError = true;\n      // }\n\n      // const responseData = await response.json();\n\n      // if (hasError) {\n      //   throw new Error(responseData.message);\n      // }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          // id: responseData.product.id,\n          id: 1\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(NewProduct, {\n        onAddProduct: addProductHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loader\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(ProductList, {\n        items: loadedProducts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G8u8/knF2qoGAFFayrBFJBNYUeU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","NewProduct","ProductList","jsxDEV","_jsxDEV","App","_s","loadedProducts","setLoadedProducts","addProductHandler","productName","productPrice","newProduct","title","price","hasError","prevProducts","concat","id","error","alert","message","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddProduct","isLoading","className","items","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/simple-mern-project/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from './components/Header/Header';\nimport NewProduct from './components/Products/NewProduct';\nimport ProductList from './components/Products/ProductList';\nimport './App.css';\n\nfunction App() {\n  const [loadedProducts, setLoadedProducts] = useState([]);\n  // const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    // const fetchProducts = async () => {\n    //   setIsLoading(true);\n    //   const response = await fetch('http://localhost:5000/products');\n\n    //   const responseData = await response.json();\n\n    //   setLoadedProducts(responseData.products);\n    //   setIsLoading(false);\n    // };\n\n    // fetchProducts();\n  }, []);\n\n  const addProductHandler = async (productName, productPrice) => {\n    try {\n      const newProduct = {\n        // title: productName,\n        // price: +productPrice // \"+\" to convert string to number\n        title: 'title',\n        price: `${1.0}` // \"+\" to convert string to number\n      };\n      let hasError = false;\n      // const response = await fetch('http://localhost:5000/product', {\n      //   method: 'POST',\n      //   body: JSON.stringify(newProduct),\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //   }\n      // });\n\n      // if (!response.ok) {\n      //   hasError = true;\n      // }\n\n      // const responseData = await response.json();\n\n      // if (hasError) {\n      //   throw new Error(responseData.message);\n      // }\n\n      setLoadedProducts(prevProducts => {\n        return prevProducts.concat({\n          ...newProduct,\n          // id: responseData.product.id,\n          id: 1\n        });\n      });\n    } catch (error) {\n      alert(error.message || 'Something went wrong!');\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Header />\n      <main>\n        <NewProduct onAddProduct={addProductHandler} />\n        {isLoading && <p className=\"loader\">Loading...</p>}\n        {!isLoading && <ProductList items={loadedProducts} />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,UAAU,MAAM,kCAAkC;AACzD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD;;EAEAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;;IAEA;;IAEA;IACA;IACA;;IAEA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMU,iBAAiB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,YAAY,KAAK;IAC7D,IAAI;MACF,MAAMC,UAAU,GAAG;QACjB;QACA;QACAC,KAAK,EAAE,OAAO;QACdC,KAAK,EAAG,GAAE,GAAI,EAAC,CAAC;MAClB,CAAC;;MACD,IAAIC,QAAQ,GAAG,KAAK;MACpB;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;;MAEAP,iBAAiB,CAACQ,YAAY,IAAI;QAChC,OAAOA,YAAY,CAACC,MAAM,CAAC;UACzB,GAAGL,UAAU;UACb;UACAM,EAAE,EAAE;QACN,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAACE,OAAO,IAAI,uBAAuB,CAAC;IACjD;EACF,CAAC;EAED,oBACEjB,OAAA,CAACP,KAAK,CAACyB,QAAQ;IAAAC,QAAA,gBACbnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA,CAACH,UAAU;QAAC2B,YAAY,EAAEnB;MAAkB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC9CE,SAAS,iBAAIzB,OAAA;QAAG0B,SAAS,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACjD,CAACE,SAAS,iBAAIzB,OAAA,CAACF,WAAW;QAAC6B,KAAK,EAAExB;MAAe;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAErB;AAACrB,EAAA,CAnEQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAqEZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}